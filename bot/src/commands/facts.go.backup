package commands

import (
	"fmt"
	"strconv"

	"github.com/bwmarrin/discordgo"
	"google.golang.org/api/sheets/v4"
)

type AutoGenerated struct {
	Factcount string   `json:"factcount"`
	Facts     []string `json:"facts"`
}

func Facts(s *discordgo.Session, m *discordgo.MessageCreate) {

	// calling google sheet service from utils
	sheetsService := spreadsheetDB.GoogleSheetClient()

	// link to our
	spreadsheetId := spreadsheetDB.GoogleSpreadSheet("facts")

	readRange := "Facts Iteration!B1"

	// initializing the value iteration from google sheet
	var iterationInt int

	resp, err := sheetsService.Spreadsheets.Values.Get(spreadsheetId, readRange).Do()
	if err != nil {
		fmt.Println("Unable to retrieve data from sheet: ", err)
	}
	if len(resp.Values) == 0 {
		fmt.Println("No data found.")
	} else {
		// accessing the iteration value
		cellInterface := resp.Values[0]
		iterationString := cellInterface[0].(string)
		// converting the string to integer
		iterationInt, _ = strconv.Atoi(iterationString)
	}

	// Adding +1 to the initial iteration value
	newIteration := fmt.Sprintf("%d", iterationInt+1)
	newIterationVal := []interface{}{newIteration}

	// updating the iteration in the sheet
	var vrUpdate sheets.ValueRange
	vrUpdate.Values = append(vrUpdate.Values, newIterationVal)
	_, err = sheetsService.Spreadsheets.Values.Update(spreadsheetId, readRange, &vrUpdate).ValueInputOption("RAW").Do()
	if err != nil {
		fmt.Println("Unable to update data in google sheet: ", err)
	}

}
